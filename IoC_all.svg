<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2887px" preserveAspectRatio="none" style="width:1033px;height:2887px;" version="1.1" viewBox="0 0 1033 2887" width="1033px" zoomAndPan="magnify"><defs><filter height="300%" id="fkuopfncmoj8m" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><ellipse cx="345.5" cy="20" fill="#000000" filter="url(#fkuopfncmoj8m)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="209" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="219" y="71.6016">启动容器</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="205" x="267" y="71.6016">ClassPathXmlApplicationContext</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="211.5" y="104.1328"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="221.5" y="125.7344">执行</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="224" x="245.5" y="125.7344">AbstractApplicationContext#refresh</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="479" x="106" y="158.2656"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="116" y="179.8672">执行</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="329" x="140" y="179.8672">AbstractApplicationContext#obtainFreshBeanFactory</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="469" y="179.8672">加载BeanDefinition</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="614" x="38.5" y="212.3984"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="48.5" y="234">执行</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="330" x="72.5" y="234">AbstractApplicationContext#postProcessBeanFactory</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="240" x="402.5" y="234">注册当前容器自己定义的BeanPostProcessor</text><rect fill="#FFFFFF" filter="url(#fkuopfncmoj8m)" height="153.0195" style="stroke: #000000; stroke-width: 2.0;" width="925" x="96.5" y="256.9844"/><path d="M585.5,257.9844 L585.5,266.4727 L575.5,276.4727 L96.5,276.4727 " fill="none" style="stroke: #000000; stroke-width: 2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="28" x="99.5" y="271.5195">执行</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="451" x="127.5" y="271.5195">AbstractApplicationContext#invokeBeanFactoryPostProcessors</text><polygon fill="#FBFB77" filter="url(#fkuopfncmoj8m)" points="604.5,306.1172,604.5,377.3594,1011.5,377.3594,1011.5,316.1172,1001.5,306.1172,604.5,306.1172" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FBFB77" points="604.5,306.1172,604.5,337.7383,584.5,341.7383,604.5,345.7383,604.5,377.3594,1011.5,377.3594,1011.5,316.1172,1001.5,306.1172,604.5,306.1172" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1001.5" x2="1001.5" y1="306.1172" y2="316.1172"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1011.5" x2="1001.5" y1="316.1172" y2="316.1172"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="610.5" y="323.6855">容器后处理接口方法:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="610.5" y="338.9961">属于容器级别</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="221" x="610.5" y="354.3066">比如:PropertyPlaceholderConfigurer</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="386" x="610.5" y="369.6172">在应用上下文完成之后立即调用(这里可以对BeanDefinition做修改)</text><rect fill="#808080" filter="url(#fkuopfncmoj8m)" height="96.5313" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="478" x="106.5" y="293.4727"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="216" x="116.5" y="315.0742">执行以下方法对工厂定义信息进行后处理</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="106.5" x2="584.5" y1="322.6055" y2="322.6055"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="458" x="116.5" y="339.207">BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="320" x="116.5" y="353.3398">BeanFactoryPostProcessor#postProcessBeanFactory</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="106.5" x2="584.5" y1="360.8711" y2="360.8711"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="106.5" x2="584.5" y1="362.8711" y2="362.8711"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="12" x="116.5" y="377.4727">即</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="36" x="128.5" y="377.4727">实例化</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="164.5" y="377.4727">所有实现了上述两个接口的类</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="58.2656" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="346" x="172.5" y="430.0039"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="326" x="182.5" y="451.6055">执行registerBeanPostProcessors()方法注册Bean后处理方法</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="172.5" x2="518.5" y1="459.1367" y2="459.1367"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="12" x="182.5" y="475.7383">即</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="36" x="194.5" y="475.7383">实例化</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="230.5" y="475.7383">所有实现了BeanPostProcessor接口(子接口)的类</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="295" x="198" y="508.2695"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="275" x="208" y="529.8711">执行finishBeanFactoryInitialization()进行Bean实例</text><rect fill="#FFFFFF" filter="url(#fkuopfncmoj8m)" height="831.9473" style="stroke: #000000; stroke-width: 2.0;" width="632" x="29.5" y="565.4336"/><path d="M137.5,566.4336 L137.5,574.9219 L127.5,584.9219 L29.5,584.9219 " fill="none" style="stroke: #000000; stroke-width: 2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="98" x="32.5" y="579.9688">查询缓存的实例</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="110.6641" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="612" x="39.5" y="601.9219"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="267" x="49.5" y="623.5234">执行DefaultSingletonBeanRegistry#getSingleton</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="39.5" x2="651.5" y1="631.0547" y2="631.0547"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="49.5" y="647.6563">使用了三级缓存</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="39.5" x2="651.5" y1="655.1875" y2="655.1875"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="39.5" x2="651.5" y1="657.1875" y2="657.1875"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="334" x="49.5" y="671.7891">一级(缓存单例对象): Map&lt;String, Object&gt; singletonObjects</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="498" x="49.5" y="685.9219">二级(缓存提前暴露的单例对象,解决循环依赖): Map&lt;String, Object&gt; earlySingletonObjects</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="592" x="49.5" y="700.0547">三级(缓存单例对象工厂,单例实例化后放入该缓存Map): Map&lt;String, ObjectFactory&lt;?&gt;&gt; singletonFactories</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="395" x="148" y="747.5859"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="375" x="158" y="769.1875">查询一级缓存: singletonObject = singletonObjects.get(beanName)</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="423" x="134" y="865.1963"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="403" x="144" y="886.7979">查询二级缓存: singletonObject = earlySingletonObjects.get(beanName)</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="145" y="982.8066"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="381" x="155" y="1004.4082">查询三级缓存:singletonFactory = singletonFactories.get(beanName)</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="62.3984" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="470" x="110.5" y="1100.417"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="343" x="120.5" y="1122.0186">得到单例对象:singletonObject = singletonFactory.getObject()</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="450" x="120.5" y="1136.1514">三级缓存提升到二级缓存:earlySingletonObjects.put(beanName, singletonObject)</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="296" x="120.5" y="1150.2842">删除三级缓存:singletonFactories.remove(beanName)</text><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="281.5,1051.9395,409.5,1051.9395,421.5,1063.9395,409.5,1075.9395,281.5,1075.9395,269.5,1063.9395,281.5,1051.9395" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="349.5" y="1086.5742">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="281.5" y="1068.0967">singletonFactory != null</text><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="345.5,1187.293,357.5,1199.293,345.5,1211.293,333.5,1199.293,345.5,1187.293" style="stroke: #A80036; stroke-width: 1.5;"/><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="182,934.3291,509,934.3291,521,946.3291,509,958.3291,182,958.3291,170,946.3291,182,934.3291" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="349.5" y="968.9639">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="182" y="950.4863">singletonObject == null &amp;&amp; 允许提前暴露正在创建中的实例对象</text><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="345.5,1235.7705,357.5,1247.7705,345.5,1259.7705,333.5,1247.7705,345.5,1235.7705" style="stroke: #A80036; stroke-width: 1.5;"/><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="217,816.7188,474,816.7188,486,828.7188,474,840.7188,217,840.7188,205,828.7188,217,816.7188" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="349.5" y="851.3535">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="220" y="832.876">singletonObject == null &amp;&amp; 当前bean正在创建中</text><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="345.5,1284.248,357.5,1296.248,345.5,1308.248,333.5,1296.248,345.5,1284.248" style="stroke: #A80036; stroke-width: 1.5;"/><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="242.5" y="1343.248"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="186" x="252.5" y="1364.8496">返回singletonObject(可能为NULL)</text><polygon fill="#FBFB77" filter="url(#fkuopfncmoj8m)" points="500,1407.3809,500,1524.5547,825,1524.5547,825,1417.3809,815,1407.3809,500,1407.3809" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FBFB77" points="500,1407.3809,500,1461.9678,480,1465.9678,500,1469.9678,500,1524.5547,825,1524.5547,825,1417.3809,815,1407.3809,500,1407.3809" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="815" x2="815" y1="1407.3809" y2="1417.3809"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="825" x2="815" y1="1417.3809" y2="1417.3809"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="184" x="506" y="1424.9492">Bean后处理接口方法(黄色流程):</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="506" y="1440.2598">属于容器级别</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="169" x="506" y="1455.5703">顶级接口BeanPostProcessor</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="214" x="506" y="1470.8809">这些接口不由Bean实现，独立于Bean</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="302" x="506" y="1486.1914">由容器进行加载，在Bean实例化的合适阶段进行调用</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="133" x="506" y="1501.502">并且作用与所有的Bean</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="304" x="506" y="1516.8125">Spring AOP就是通过BeanPostProcessor进行实施的</text><rect fill="#FFFF00" filter="url(#fkuopfncmoj8m)" height="48.2656" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="211" y="1441.835"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="221" y="1463.4365">调用InstantiationAwareBeanPostProcessor的</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="207" x="221" y="1477.5693">postProcessBeforeInstantiation()方法</text><rect fill="#008000" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="179" x="256" y="1544.5547"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="266" y="1566.1563">实例化:</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="119" x="306" y="1566.1563">createBeanInstance</text><polygon fill="#FBFB77" filter="url(#fkuopfncmoj8m)" points="417.5,1588.6875,417.5,1675.2402,656.5,1675.2402,656.5,1598.6875,646.5,1588.6875,417.5,1588.6875" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FBFB77" points="417.5,1588.6875,417.5,1627.9639,397.5,1631.9639,417.5,1635.9639,417.5,1675.2402,656.5,1675.2402,656.5,1598.6875,646.5,1588.6875,417.5,1588.6875" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="646.5" x2="646.5" y1="1588.6875" y2="1598.6875"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="656.5" x2="646.5" y1="1598.6875" y2="1598.6875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="423.5" y="1606.2559">Bean自身方法(蓝色流程):</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="159" x="423.5" y="1621.5664">如调用Bean构造函数实例化</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="143" x="423.5" y="1636.877">调用Setter设置Bean属性</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="205" x="423.5" y="1652.1875">调用&lt;bean&gt;的init-method初始化</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="218" x="423.5" y="1667.498">调用&lt;bean&gt;的destory-method销毁</text><rect fill="#00BFFF" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="104" x="293.5" y="1614.8975"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="303.5" y="1636.499">构造函数实例化</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="58.2656" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="485" x="103" y="1695.2402"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="275" x="113" y="1716.8418">添加实例对象工厂到三级缓存:addSingletonFactory</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="103" x2="588" y1="1724.373" y2="1724.373"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="465" x="113" y="1740.9746">注意此处是在bean实例化之后才加入三级缓存的,所以Spring无法解决构造函数循环依赖</text><rect fill="#FFFF00" filter="url(#fkuopfncmoj8m)" height="48.2656" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="211" y="1773.5059"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="221" y="1795.1074">调用InstantiationAwareBeanPostProcessor的</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="221" y="1809.2402">postProcessAfterInstantiation()方法</text><rect fill="#FFFF00" filter="url(#fkuopfncmoj8m)" height="48.2656" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="211" y="1841.7715"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="221" y="1863.373">调用InstantiationAwareBeanPostProcessor的</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="188" x="221" y="1877.5059">postProcessPropertyValues()方法</text><rect fill="#008000" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="169" x="261" y="1910.0371"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="271" y="1931.6387">填充属性值:</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="85" x="335" y="1931.6387">populateBean</text><rect fill="#00BFFF" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="113" x="289" y="1964.1699"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="299" y="1985.7715">Setter填充属性值</text><polygon fill="#FBFB77" filter="url(#fkuopfncmoj8m)" points="498,2008.3027,498,2079.5449,742,2079.5449,742,2018.3027,732,2008.3027,498,2008.3027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FBFB77" points="498,2008.3027,498,2039.9238,478,2043.9238,498,2047.9238,498,2079.5449,742,2079.5449,742,2018.3027,732,2008.3027,498,2008.3027" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="732" x2="732" y1="2008.3027" y2="2018.3027"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="742" x2="732" y1="2018.3027" y2="2018.3027"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="171" x="504" y="2025.8711">Bean级别接口方法(粉色流程):</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="159" x="504" y="2041.1816">由Bean自身实现的接口方法</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="223" x="504" y="2056.4922">例如Bean实现BeanNameAware接口，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="185" x="504" y="2071.8027">使Bean可以得到BeanName的值</text><rect fill="#FFC0CB" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="213" y="2026.8574"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="223" y="2048.459">调用BeanNameAware的setBeanName()方法</text><rect fill="#FFC0CB" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="337" x="177" y="2099.5449"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="317" x="187" y="2121.1465">调用BeanClassLoaderAware的setBeanClassLoader()方法</text><rect fill="#FFC0CB" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="206" y="2153.6777"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="216" y="2175.2793">调用BeanFactoryAware的setBeanFactory()方法</text><rect fill="#FFFF00" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="370" x="160.5" y="2207.8105"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="350" x="170.5" y="2229.4121">调用BeanPostProcessor的postProcessBeforeInitialization()方法</text><rect fill="#008000" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="144" x="273.5" y="2261.9434"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="283.5" y="2283.5449">初始化:</text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="84" x="323.5" y="2283.5449">initializeBean</text><rect fill="#FFC0CB" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="276" x="207.5" y="2316.0762"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="217.5" y="2337.6777">调用InitializingBean的afterPropertiesSet()方法</text><rect fill="#00BFFF" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="235.5" y="2370.209"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="245.5" y="2391.8105">通过init-method属性配置的初始方法</text><rect fill="#FFFF00" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="361" x="165" y="2424.3418"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="341" x="175" y="2445.9434">调用BeanPostProcessor的postProcessAfterInitialization()方法</text><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="316.5,2478.4746,374.5,2478.4746,386.5,2490.4746,374.5,2502.4746,316.5,2502.4746,304.5,2490.4746,316.5,2478.4746" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="316.5" y="2494.6318">Bean作用域</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="254.5" y="2488.1543">singleton</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="386.5" y="2488.1543">prototype</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="58.2656" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="240" x="47" y="2512.4746"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="220" x="57" y="2534.0762">将准备就绪的Bean存储于Spring缓冲池中</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="47" x2="287" y1="2541.6074" y2="2541.6074"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="57" y="2558.209">添加到一级缓存,删除二级和三级缓存</text><rect fill="#FF0000" filter="url(#fkuopfncmoj8m)" height="86.5313" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="10" y="2590.7402"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="206" x="20" y="2612.3418">如果当前bean实现了FactoryBean接口</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="294" x="20" y="2626.4746">则需要执行FactoryBean#getObject方法返回bean实例</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="243" x="20" y="2640.6074">(这里只画了singleton,其他作用域也由此操作)</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="10" x2="324" y1="2648.1387" y2="2648.1387"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="281" x="20" y="2664.7402">Mybatis的Mapper对象生成就是通过此方式实例化的</text><rect fill="#FFC0CB" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="223" x="55.5" y="2718.5469"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="203" x="65.5" y="2740.1484">调用DisposableBean的destroy()方法</text><rect fill="#00BFFF" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="246" x="44" y="2772.6797"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="54" y="2794.2813">通过destory-method属性配置的销毁方法</text><rect fill="#FEFECE" filter="url(#fkuopfncmoj8m)" height="34.1328" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="360" x="344" y="2512.4746"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="340" x="354" y="2534.0762">将准备就绪的Bean交给调用者，从此摆脱Spring的生命周期管理</text><polygon fill="#FEFECE" filter="url(#fkuopfncmoj8m)" points="345.5,2812.8125,357.5,2824.8125,345.5,2836.8125,333.5,2824.8125,345.5,2812.8125" style="stroke: #A80036; stroke-width: 1.5;"/><ellipse cx="345.5" cy="2866.8125" fill="none" filter="url(#fkuopfncmoj8m)" rx="10" ry="10" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="346" cy="2867.3125" fill="#000000" filter="url(#fkuopfncmoj8m)" rx="6" ry="6" style="stroke: none; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="30" y2="50"/><polygon fill="#A80036" points="341.5,40,345.5,50,349.5,40,345.5,44" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="84.1328" y2="104.1328"/><polygon fill="#A80036" points="341.5,94.1328,345.5,104.1328,349.5,94.1328,345.5,98.1328" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="138.2656" y2="158.2656"/><polygon fill="#A80036" points="341.5,148.2656,345.5,158.2656,349.5,148.2656,345.5,152.2656" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="192.3984" y2="212.3984"/><polygon fill="#A80036" points="341.5,202.3984,345.5,212.3984,349.5,202.3984,345.5,206.3984" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="246.5313" y2="293.4727"/><polygon fill="#A80036" points="341.5,283.4727,345.5,293.4727,349.5,283.4727,345.5,287.4727" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="390.0039" y2="430.0039"/><polygon fill="#A80036" points="341.5,420.0039,345.5,430.0039,349.5,420.0039,345.5,424.0039" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="488.2695" y2="508.2695"/><polygon fill="#A80036" points="341.5,498.2695,345.5,508.2695,349.5,498.2695,345.5,502.2695" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="712.5859" y2="747.5859"/><polygon fill="#A80036" points="341.5,737.5859,345.5,747.5859,349.5,737.5859,345.5,741.5859" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1075.9395" y2="1100.417"/><polygon fill="#A80036" points="341.5,1090.417,345.5,1100.417,349.5,1090.417,345.5,1094.417" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="421.5" x2="590.5" y1="1063.9395" y2="1063.9395"/><polygon fill="#A80036" points="586.5,1121.6162,590.5,1131.6162,594.5,1121.6162,590.5,1125.6162" style="stroke: #A80036; stroke-width: 1.5;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="590.5" x2="590.5" y1="1063.9395" y2="1199.293"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="590.5" x2="357.5" y1="1199.293" y2="1199.293"/><polygon fill="#A80036" points="367.5,1195.293,357.5,1199.293,367.5,1203.293,363.5,1199.293" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1162.8154" y2="1187.293"/><polygon fill="#A80036" points="341.5,1177.293,345.5,1187.293,349.5,1177.293,345.5,1181.293" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1016.9395" y2="1051.9395"/><polygon fill="#A80036" points="341.5,1041.9395,345.5,1051.9395,349.5,1041.9395,345.5,1045.9395" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="958.3291" y2="982.8066"/><polygon fill="#A80036" points="341.5,972.8066,345.5,982.8066,349.5,972.8066,345.5,976.8066" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="521" x2="612.5" y1="946.3291" y2="946.3291"/><polygon fill="#A80036" points="608.5,1087.0498,612.5,1097.0498,616.5,1087.0498,612.5,1091.0498" style="stroke: #A80036; stroke-width: 1.5;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="612.5" x2="612.5" y1="946.3291" y2="1247.7705"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="612.5" x2="357.5" y1="1247.7705" y2="1247.7705"/><polygon fill="#A80036" points="367.5,1243.7705,357.5,1247.7705,367.5,1251.7705,363.5,1247.7705" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1211.293" y2="1235.7705"/><polygon fill="#A80036" points="341.5,1225.7705,345.5,1235.7705,349.5,1225.7705,345.5,1229.7705" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="899.3291" y2="934.3291"/><polygon fill="#A80036" points="341.5,924.3291,345.5,934.3291,349.5,924.3291,345.5,928.3291" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="840.7188" y2="865.1963"/><polygon fill="#A80036" points="341.5,855.1963,345.5,865.1963,349.5,855.1963,345.5,859.1963" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="486" x2="634.5" y1="828.7188" y2="828.7188"/><polygon fill="#A80036" points="630.5,1052.4834,634.5,1062.4834,638.5,1052.4834,634.5,1056.4834" style="stroke: #A80036; stroke-width: 1.5;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="634.5" x2="634.5" y1="828.7188" y2="1296.248"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="634.5" x2="357.5" y1="1296.248" y2="1296.248"/><polygon fill="#A80036" points="367.5,1292.248,357.5,1296.248,367.5,1300.248,363.5,1296.248" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1259.7705" y2="1284.248"/><polygon fill="#A80036" points="341.5,1274.248,345.5,1284.248,349.5,1274.248,345.5,1278.248" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="781.7188" y2="816.7188"/><polygon fill="#A80036" points="341.5,806.7188,345.5,816.7188,349.5,806.7188,345.5,810.7188" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1308.248" y2="1343.248"/><polygon fill="#A80036" points="341.5,1333.248,345.5,1343.248,349.5,1333.248,345.5,1337.248" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="542.4023" y2="601.9219"/><polygon fill="#A80036" points="341.5,591.9219,345.5,601.9219,349.5,591.9219,345.5,595.9219" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="349.5" y="563.8574">调用getBean()实例化单个Bean</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1377.3809" y2="1441.835"/><polygon fill="#A80036" points="341.5,1431.835,345.5,1441.835,349.5,1431.835,345.5,1435.835" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1490.1006" y2="1544.5547"/><polygon fill="#A80036" points="341.5,1534.5547,345.5,1544.5547,349.5,1534.5547,345.5,1538.5547" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1578.6875" y2="1614.8975"/><polygon fill="#A80036" points="341.5,1604.8975,345.5,1614.8975,349.5,1604.8975,345.5,1608.8975" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1649.0303" y2="1695.2402"/><polygon fill="#A80036" points="341.5,1685.2402,345.5,1695.2402,349.5,1685.2402,345.5,1689.2402" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1753.5059" y2="1773.5059"/><polygon fill="#A80036" points="341.5,1763.5059,345.5,1773.5059,349.5,1763.5059,345.5,1767.5059" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1821.7715" y2="1841.7715"/><polygon fill="#A80036" points="341.5,1831.7715,345.5,1841.7715,349.5,1831.7715,345.5,1835.7715" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1890.0371" y2="1910.0371"/><polygon fill="#A80036" points="341.5,1900.0371,345.5,1910.0371,349.5,1900.0371,345.5,1904.0371" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1944.1699" y2="1964.1699"/><polygon fill="#A80036" points="341.5,1954.1699,345.5,1964.1699,349.5,1954.1699,345.5,1958.1699" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="1998.3027" y2="2026.8574"/><polygon fill="#A80036" points="341.5,2016.8574,345.5,2026.8574,349.5,2016.8574,345.5,2020.8574" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2060.9902" y2="2099.5449"/><polygon fill="#A80036" points="341.5,2089.5449,345.5,2099.5449,349.5,2089.5449,345.5,2093.5449" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2133.6777" y2="2153.6777"/><polygon fill="#A80036" points="341.5,2143.6777,345.5,2153.6777,349.5,2143.6777,345.5,2147.6777" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2187.8105" y2="2207.8105"/><polygon fill="#A80036" points="341.5,2197.8105,345.5,2207.8105,349.5,2197.8105,345.5,2201.8105" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2241.9434" y2="2261.9434"/><polygon fill="#A80036" points="341.5,2251.9434,345.5,2261.9434,349.5,2251.9434,345.5,2255.9434" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2296.0762" y2="2316.0762"/><polygon fill="#A80036" points="341.5,2306.0762,345.5,2316.0762,349.5,2306.0762,345.5,2310.0762" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2350.209" y2="2370.209"/><polygon fill="#A80036" points="341.5,2360.209,345.5,2370.209,349.5,2360.209,345.5,2364.209" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2404.3418" y2="2424.3418"/><polygon fill="#A80036" points="341.5,2414.3418,345.5,2424.3418,349.5,2414.3418,345.5,2418.3418" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="167" x2="167" y1="2570.7402" y2="2590.7402"/><polygon fill="#A80036" points="163,2580.7402,167,2590.7402,171,2580.7402,167,2584.7402" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="167" x2="167" y1="2677.2715" y2="2718.5469"/><polygon fill="#A80036" points="163,2708.5469,167,2718.5469,171,2708.5469,167,2712.5469" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="171" y="2698.7266">容器销毁</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="167" x2="167" y1="2752.6797" y2="2772.6797"/><polygon fill="#A80036" points="163,2762.6797,167,2772.6797,171,2762.6797,167,2766.6797" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304.5" x2="167" y1="2490.4746" y2="2490.4746"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="167" x2="167" y1="2490.4746" y2="2512.4746"/><polygon fill="#A80036" points="163,2502.4746,167,2512.4746,171,2502.4746,167,2506.4746" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="386.5" x2="524" y1="2490.4746" y2="2490.4746"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="524" x2="524" y1="2490.4746" y2="2512.4746"/><polygon fill="#A80036" points="520,2502.4746,524,2512.4746,528,2502.4746,524,2506.4746" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="167" x2="167" y1="2806.8125" y2="2824.8125"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="167" x2="333.5" y1="2824.8125" y2="2824.8125"/><polygon fill="#A80036" points="323.5,2820.8125,333.5,2824.8125,323.5,2828.8125,327.5,2824.8125" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="524" x2="524" y1="2546.6074" y2="2824.8125"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="524" x2="357.5" y1="2824.8125" y2="2824.8125"/><polygon fill="#A80036" points="367.5,2820.8125,357.5,2824.8125,367.5,2828.8125,363.5,2824.8125" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2458.4746" y2="2478.4746"/><polygon fill="#A80036" points="341.5,2468.4746,345.5,2478.4746,349.5,2468.4746,345.5,2472.4746" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="345.5" y1="2836.8125" y2="2856.8125"/><polygon fill="#A80036" points="341.5,2846.8125,345.5,2856.8125,349.5,2846.8125,345.5,2850.8125" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
start
:启动容器**ClassPathXmlApplicationContext**;
:执行**AbstractApplicationContext#refresh**;
:执行**AbstractApplicationContext#obtainFreshBeanFactory**加载BeanDefinition;
:执行**AbstractApplicationContext#postProcessBeanFactory**注册当前容器自己定义的BeanPostProcessor;
partition 执行**AbstractApplicationContext#invokeBeanFactoryPostProcessors** {
#Grey:执行以下方法对工厂定义信息进行后处理
- - - -
**BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry**
**BeanFactoryPostProcessor#postProcessBeanFactory**
====
即**实例化**所有实现了上述两个接口的类;
note right
容器后处理接口方法:
属于容器级别
比如:PropertyPlaceholderConfigurer
在应用上下文完成之后立即调用(这里可以对BeanDefinition做修改)
end note
}
:执行registerBeanPostProcessors()方法注册Bean后处理方法
- - - -
即**实例化**所有实现了BeanPostProcessor接口(子接口)的类;
:执行finishBeanFactoryInitialization()进行Bean实例;
->调用getBean()实例化单个Bean;
partition 查询缓存的实例 {
:执行DefaultSingletonBeanRegistry#getSingleton
- - - -
使用了三级缓存
====
一级(缓存单例对象): Map<String, Object> singletonObjects
二级(缓存提前暴露的单例对象,解决循环依赖): Map<String, Object> earlySingletonObjects
三级(缓存单例对象工厂,单例实例化后放入该缓存Map): Map<String, ObjectFactory<?>> singletonFactories;
:查询一级缓存: singletonObject = singletonObjects.get(beanName);
if( singletonObject == null && 当前bean正在创建中) then(yes)
:查询二级缓存: singletonObject = earlySingletonObjects.get(beanName);
if(singletonObject == null && 允许提前暴露正在创建中的实例对象) then(yes)
:查询三级缓存:singletonFactory = singletonFactories.get(beanName);
if(singletonFactory != null) then(yes)
:得到单例对象:singletonObject = singletonFactory.getObject()
三级缓存提升到二级缓存:earlySingletonObjects.put(beanName, singletonObject)
删除三级缓存:singletonFactories.remove(beanName);
endif
endif
endif
:返回singletonObject(可能为NULL);
}
#yellow:调用InstantiationAwareBeanPostProcessor的
postProcessBeforeInstantiation()方法;
note right
Bean后处理接口方法(黄色流程):
属于容器级别
顶级接口BeanPostProcessor
这些接口不由Bean实现，独立于Bean
由容器进行加载，在Bean实例化的合适阶段进行调用
并且作用与所有的Bean
Spring AOP就是通过BeanPostProcessor进行实施的
end note
#Green:实例化:**createBeanInstance**;
#DeepSkyBlue:构造函数实例化;
note right
Bean自身方法(蓝色流程):
如调用Bean构造函数实例化
调用Setter设置Bean属性
调用<bean>的init-method初始化
调用<bean>的destory-method销毁
end note
:添加实例对象工厂到三级缓存:addSingletonFactory
- - - -
注意此处是在bean实例化之后才加入三级缓存的,所以Spring无法解决构造函数循环依赖;
#yellow:调用InstantiationAwareBeanPostProcessor的
postProcessAfterInstantiation()方法;
#yellow:调用InstantiationAwareBeanPostProcessor的
postProcessPropertyValues()方法;
#Green:填充属性值:**populateBean**;
#DeepSkyBlue:Setter填充属性值;
#pink:调用BeanNameAware的setBeanName()方法;
note right
Bean级别接口方法(粉色流程):
由Bean自身实现的接口方法
例如Bean实现BeanNameAware接口，
使Bean可以得到BeanName的值
end note
#pink:调用BeanClassLoaderAware的setBeanClassLoader()方法;
#pink:调用BeanFactoryAware的setBeanFactory()方法;
#yellow:调用BeanPostProcessor的postProcessBeforeInitialization()方法;
#Green:初始化:**initializeBean**;
#pink:调用InitializingBean的afterPropertiesSet()方法;
#DeepSkyBlue:通过init-method属性配置的初始方法;
#yellow:调用BeanPostProcessor的postProcessAfterInitialization()方法;
if(Bean作用域) then(singleton)
:将准备就绪的Bean存储于Spring缓冲池中
- - - -
添加到一级缓存,删除二级和三级缓存;
#Red:如果当前bean实现了FactoryBean接口
则需要执行FactoryBean#getObject方法返回bean实例
(这里只画了singleton,其他作用域也由此操作)
- - - -
Mybatis的Mapper对象生成就是通过此方式实例化的;
->容器销毁;
#pink:调用DisposableBean的destroy()方法;
#DeepSkyBlue:通过destory-method属性配置的销毁方法;
else(prototype)
:将准备就绪的Bean交给调用者，从此摆脱Spring的生命周期管理;
endif

stop
@enduml

PlantUML version 1.2017.15(Tue Jul 04 00:45:34 CST 2017)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_152-release-1024-b8
Operating System: Mac OS X
OS Version: 10.13.5
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>